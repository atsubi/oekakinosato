<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=Shift-jis">
    <title>お絵描きの里</title>
    <style>
      body{
        background: url(Pencle2.png);
        font-family: Meiryo;
      }

      #title {
        width: 250px;
        background: #93ffab;
        padding: 10px;
        text-align: center;
        margin: 10px auto;
        zoom: 200%;
      }

      #question {
        text-align: center;
        margin: 0 auto;
      }

      #center_container {
        width: 1300px;
        margin: 0 auto;
      }

      #paint_container {
        width: 800px;
        background: #ffffff;
      }

      .paint{
        float: left;
        width: 400px;
        height: 300px;
      }

      #paint_p1 {
        background: #dddd00;
      }

      #paint_p2 {
        background: #dd00dd;
      }

      #paint_p3 {
        background: #00dddd;
      }

      #paint_p4 {
        background: #777777;
      }

      #player_container {
        background: #ff00ff;
        width: 250px;
        height: 250px;
        text-align: center;
        float: left;
        margin: -550px 820px;
      }

      #player_list {
        background: #ffffff;
        width: 150px;
        margin: 20px auto;
        vertical-align: middle;
      }
        
      p.playerlist{zoom: 150%;}
        
      #chat_container{
        background: #ffffff;
        width: 200px;
        height: 60px;
        margin: 150px 820px;
      }
       
      canvas {
        margin: 0;
        float: right;
        border: 3px solid #ccc;
      }

      #send {
        font-size: 120%;
        width: 180px;
        height: 50px;
      }

      #clear {
        font-size: 120%;
        width: 130px;
        height: 50px;
      }

      #paint ul {
        margin: 0;
        padding: 0;
        list-style: none;
      }
    
      #paint li {
        display:inline-block;
        margin 0 auto;
      }

      #color ul {
        margin: 0;
        padding: 0;
        list-style: none;
      }
    
      #color li {
        margin: 0 auto;
        cursor: pointer;
        cursor: hand;
        display: block;
        border: 1px solid #000;
        width: 20px;
        height: 20px;
      }

      #canvas {
        float: left;
        margin: 0;
        background: #ffffff;
      }
    </style>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script type="text/javascript">

      var p_flag = true;  // 描画可能フラグ
      var flag = false;


      var my_id = "";     // 自身のプレイヤ番号
      var answer_id = ""; // 回答者のプレイヤ番号
      var canvas;
      var startX;
      var startY;
      var offset = 5;

      $(function(){
         getMyNumber();     // 自身のプレイヤ番号を取り出す。
         getAnswerNumber(); // 回答者のプレイヤ番号を取り出す。
         getPlayerlist();   // プレイヤリスト読み込み
         getOdai();           // お題読み込み
      });


      <!-- マウスクリック時 -->
      function onMouseDown(e) {
          if ( p_flag ) {
             flag = true;
             canvas = document.getElementById("mycanvas"+my_id);
             startX = e.pageX - canvas.offsetLeft - offset;
             startY = e.pageY - canvas.offsetTop - offset;
             return false; // for chrome
          }
      }

      <!-- マウスを動かした時 -->
      function onMouseMove(e) {
          if ( flag ) {
             canvas = document.getElementById("mycanvas"+my_id);
             context = canvas.getContext("2d");
             var endX = e.pageX - canvas.offsetLeft - offset;
             var endY = e.pageY - canvas.offsetTop - offset;
             context.beginPath();  
             context.moveTo( startX, startY );
             context.lineTo( endX, endY );  
             context.stroke();
             startX = endX;
             startY = endY;
          }
      }

      function onMouseUp() {
            flag = false;
      }

      function onMouseLeave() {
            flag = false;
      }
      

      function changeColor( num, color ) {
        canvas = document.getElementById("mycanvas"+num);
        context = canvas.getContext("2d");
        context.strokeStyle = color;
        if( context.strokeStyle == "#ffffff" ) {
          context.lineWidth = 10;
        } else {
          context.lineWidth = 2;
        }
      }

      <!-- 描画不能フラグを建てる -->
      function endPaint() {
         p_flag = false;

         /////////// なんかcanvasにひと工夫 ////////////

      }

      
      <!-- XMLHttpRequest オブジェクトを取得するためのユーザ定義関数 -->
      function getXHR() {
         var req;
         try {
           req = new XMLHttpRequest();
         } catch(e) {
           try {
              req = new ActiveXObject("Msxml2.XMLHTTP");
           } catch(e) {
              req = new ActiveXObject("Microsoft.XMLHTTP");
           }
         }
         return req;
      }

      <!-- カウントの初期値設定 + カウントスタート -->
      var count = 30;
      var timerID = setInterval('countDown()', 1000);
      var timerID2;

      <!-- canvas初期設定を行う -->
      function initCanvas(num) {
         var canvas = document.getElementById("mycanvas"+num);
         var context = canvas.getContext("2d");
         context.beginPath();
         context.fillStyle = 'rgb(255, 255, 255)';
         context.fillRect(0, 0, canvas.width, canvas.height);
         context.lineWidth = 2;
      
         canvas.addEventListener('mousemove', onMouseMove, false);
         canvas.addEventListener('mousedown', onMouseDown, false);
         canvas.addEventListener('mouseup', onMouseUp, false);
         canvas.addEventListener('mouseleave', onMouseLeave, false);

      }

      <!-- カウントをプリント-->
      function printCount() {
         var rest = document.getElementById("rest_time");
         rest.innerHTML = "残り" + count + "秒";
      }

      <!-- カウントダウン更新 -->
      function countDown() {
         count--;
         printCount();
         if( count == 0 ) // カウントダウン終了
         {
            // 画像送信処理+描画禁止処理 
            sendImage();
      
         }
      }

      <!-- 画像送信処理+描画禁止処理 -->
      function sendImage() {
         var req = getXHR();

         // 画像データをbase64に変換
         var base64 = canvas.toDataURL('image/png');
         imgdata = base64.replace('data:image/png;base64,','').split("+").join("-").split("/").join("_");

         // 通信状態の変化に応じたアクションの定義
         req.onreadystatechange = function() {
            var err = document.getElementById("log");
            if( req.readyState == 4 ) {  // 通信完了時
               if( req.status == 200 ) {   // 通信成功
                  err.innerHTML = req.responseText;   // ruby内のエラー出力
               } else {                    // 通信失敗
                  err.innerHTML = req.status;
               }
            } else {
      
            }
      
         }
      
         // 画像データ送信
         req.open("POST", "/cgi-bin/receive_image.rb", true);
         req.setRequestHeader("Content-type", 'image/png');
         req.send( imgdata ); 

         // 画像データ送信後canvasに描画出来ないようにする
         endPaint();
      
         // カウント停止
         printCount();
         clearInterval( timerID );

         // 
         resultGame();
      }   


      <!-- -->
      function getMyNumber() {
         var req = getXHR();
         req.onreadystatechange = function() {

            if( req.readyState == 4 ) {  // 通信完了時
                if( req.status == 200 ) {   // 通信成功
                   my_id = req.responseText;
                   display_paint(my_id);     // プレイヤ番号に応じて、対応するcanvasを表示
                   initCanvas(my_id);        // canvasイベント挿入
                } else {                     // 通信失敗
                   return 0;
                }
            } else {
 
            }
         }

         // サーバとの非同期通信を開始
         req.open("GET","/cgi-bin/player_number.rb", false);
         req.send(null);
      }
    
  
      function display_paint(num){
         var paint1 = document.getElementById("paint_p1");
         var paint2 = document.getElementById("paint_p2");
         var paint3 = document.getElementById("paint_p3");
         var paint4 = document.getElementById("paint_p4");
         switch (num){
         case "1":
           paint2.innerHTML = "";
           paint3.innerHTML = "";
           paint4.innerHTML = "";
           canvas = document.getElementById("mycanvas1");
           break;
         case "2":
           paint1.innerHTML = "";
           paint3.innerHTML = "";
           paint4.innerHTML = "";
           canvas =  document.getElementById("mycanvas2");
           break;
         case "3":
           paint1.innerHTML = "";
           paint2.innerHTML = "";
           paint4.innerHTML = "";
           canvas = document.getElementById("mycanvas3");      
           break;
         case "4":
           paint1.innerHTML = "";
           paint2.innerHTML = "";
           paint3.innerHTML = "";
           canvas =  document.getElementById("mycanvas4");
           break;
         default:
           break;
         }
     
      }

      function getAnswerNumber() {
         var req = getXHR();
         var paint1 = document.getElementById("paint_p1");
         var paint2 = document.getElementById("paint_p2");
         var paint3 = document.getElementById("paint_p3");
         var paint4 = document.getElementById("paint_p4");

         req.onreadystatechange = function() {
            if( req.readyState == 4 ) {  // 通信完了時
                if( req.status == 200 ) {   // 通信成功
                   answer_id = req.responseText;
                   if ( answer_id == my_id ) {
                      paint1.innerHTML = "";
                      paint2.innerHTML = "";
                      paint3.innerHTML = "";
                      paint4.innerHTML = "";
                   }
                } else {                    // 通信失敗

                }
            } else {

            }
         }

         // サーバとの同期通信を開始
         req.open("GET", "/cgi-bin/answer.rb", false);
         req.send(null);
      }


      <!-- -->
      function getPlayerlist() {

         var req = getXHR();

         var name_p1 = document.getElementById("name_p1");
         var name_p2 = document.getElementById("name_p2");
         var name_p3 = document.getElementById("name_p3");
         var name_p4 = document.getElementById("name_p4");

         req.onreadystatechange = function() {

            if( req.readyState == 4 ) {  // 通信完了時
                if( req.status == 200 ) {   // 通信成功
                   tmp = req.responseText.split(",");
                   name_p1.innerHTML = "p1:" + tmp[0];
                   name_p2.innerHTML = "p2:" + tmp[1];
                   name_p3.innerHTML = "p3:" + tmp[2];
                   name_p4.innerHTML = "p4:" + tmp[3];
                } else {                    // 通信失敗
                   name_p1.innerHTML = req.status;
                }
            } else {
 
            }
         }

         // サーバとの非同期通信を開始
         req.open( "GET", "/cgi-bin/playerlist.rb", false );
         req.send( null );

      }

      <!-- お題を読み込む -->
      function getOdai() {

        var req = getXHR();
        var question = document.getElementById("question");

        req.onreadystatechange = function() {

          if( req.readyState == 4 ) {  // 通信完了時
              if( req.status == 200 ) {   // 通信成功
                if ( answer_id == my_id ) {
                   question.innerHTML = "あなたは回答者です．他のプレイヤが絵を書き終えるまでお待ちください．";
                } else {
                   question.innerHTML = req.responseText;
                }
              } else {                    // 通信失敗
                question.innerHTML = req.status;
              }
          } else {
            question.innerHTML = "通信中・・・";
          }
        }
        
        // サーバとの非同期通信を開始
        req.open( "GET", "/cgi-bin/odai.rb", false );
        req.send( null );
      }


      function resultGame() {

        var req = getXHR();
        var rest_time = document.getElementById("rest_time");
      
        <!-- 通信処理 -->
        req.onreadystatechange = function() {

           if( req.readyState == 4 ) {
               if ( req.status == 200 ) {
                 rest_time.innerHTML = "他の方を待っています。";
                 TimerID2 = setInterval('checkResult()', 1000);
               } else {
                 rest_time.innerHTML = req.status
               }
           
           }
        }
        req.open("GET", "/cgi-bin/game_result.rb", true);
        req.send( null );
      }


      function checkResult() {

        var req = getXHR();
        var rest_time = document.getElementById("rest_time");

        <!-- 通信処理 -->
        req.onreadystatechange = function() {

          if( req.readyState == 4 ) {
             if ( req.status == 200 ) {
                rest_time.innerHTML = "他の方を待っています。"
	        if ( parseInt( req.responseText, 10 ) == 1 ) { //全員
                   clearInterval( TimerID2 );
	           document.location.href = "http://v157-7-113-64.z1d13.static.cnode.jp/direct_to_game_A.rb"
                }

	        else {

	        }
             }
             else {
                rest_time.innerHTML = req.status
	     }
          }

        }

        req.open("GET", "/cgi-bin/check_result.rb", true);
        req.send( null );

      }


    </script>
    
  </head>

  <body>

    <div id = "title">
      <h1>お絵描きの里</h1>
    </div>

    <h2>
      <div id="question">
	<!-- お題の中身が入る場所 -->
      </div>
    </h2>

    <div id="center_container">
      <div id="paint_container">
	<div id="paint_p1" class="paint">           

	  <ul id="paint" style="float:left">
	    <li>
	      <ul id="color" style="float:left">
		<li style="background-color:#000" onclick="changeColor('1', '#000000')"></li>
		<li style="background-color:#f00" onclick="changeColor('1', '#ff0000')"></li>
		<li style="background-color:#0f0" onclick="changeColor('1', '#00ff00')"></li>
		<li style="background-color:#00f" onclick="changeColor('1', '#0000ff')"></li>
		<li style="background-color:#fff" onclick="changeColor('1', '#ffffff')"><img src="eraser.png" width="20" \
height="20"></li>
	      </ul>
	    </li>
	    <li>
	      <canvas id="mycanvas1" width="320" height="270">
		お使いのブラウザではお絵描きを行うことが出来ません．
	      </canvas>
	    </li>
	  </ul>

	</div>
	<div id="paint_p2" class="paint">
	  
          <ul id="paint" style="float:left">
            <li>
              <ul id="color" style="float:left">
		<li style="background-color:#000" onclick="changeColor('2', '#000000')"></li>
                <li style="background-color:#f00" onclick="changeColor('2', '#ff0000')"></li>
                <li style="background-color:#0f0" onclick="changeColor('2', '#00ff00')"></li>
                <li style="background-color:#00f" onclick="changeColor('2', '#0000ff')"></li>
                <li style="background-color:#fff" onclick="changeColor('2', '#ffffff')"><img src="eraser.png" width="20" \
height="20"></li>
              </ul>
            </li>
            <li>
              <canvas id="mycanvas2" width="320" height="270">
                お使いのブラウザではお絵描きを行うことが出来ません．
              </canvas>
            </li>
          </ul>

	</div>
	<div id="paint_p3" class="paint">
          <ul id="paint" style="float:left">
            <li>
              <ul id="color" style="float:left">
		<li style="background-color:#000" onclick="changeColor('3', '#000000')"></li>
                <li style="background-color:#f00" onclick="changeColor('3', '#ff0000')"></li>
                <li style="background-color:#0f0" onclick="changeColor('3', '#00ff00')"></li>
                <li style="background-color:#00f" onclick="changeColor('3', '#0000ff')"></li>
                <li style="background-color:#fff" onclick="changeColor('3', '#ffffff')"><img src="eraser.png" width="20" \
height="20"></li>
              </ul>
            </li>
            <li>
              <canvas id="mycanvas3" width="320" height="270">
                お使いのブラウザではお絵描きを行うことが出来ません．
              </canvas>
            </li>
          </ul>
	  
	</div>
	<div id="paint_p4" class="paint">
	  <ul id="paint" style="float:left">
            <li>
              <ul id="color" style="float:left">
		<li style="background-color:#000" onclick="changeColor('4', '#000000')"></li>
                <li style="background-color:#f00" onclick="changeColor('4', '#ff0000')"></li>
                <li style="background-color:#0f0" onclick="changeColor('4', '#00ff00')"></li>
                <li style="background-color:#00f" onclick="changeColor('4', '#0000ff')"></li>
                <li style="background-color:#fff" onclick="changeColor('4', '#ffffff')"><img src="eraser.png" width="20" \
height="20"></li>
              </ul>
            </li>
            <li>
              <canvas id="mycanvas4" width="320" height="270">
                お使いのブラウザではお絵描きを行うことが出来ません．
              </canvas>
            </li>
          </ul>

	</div>
      </div>

      <div id="player_container">
          
	<div id="player_list">
          <p class="playerlist">
	    <div id="name_p1">p1:</div><br>
	    <div id="name_p2">p2:</div><br>
	    <div id="name_p3">p3:</div><br>
	    <div id="name_p4">p4:</div><br>
          </p>
	</div>
          
      </div>
        <br><br><br><br><br><br><br>
      <div id="chat_container">
	<div id="rest_time">
        </div>
	<!--	<form name="reload" id="reload">
		<input type="button" value="リロード" onclick="reLoad()"></input>
	</form> -->
      </div>
    </div>
      
</html>
